
{% macro create_value(type, jmx_metric_name) %}
    {% if jmx_metric_name in upload_list %}
            <Value>
                Type "{{ type }}"
                InstancePrefix "{{jmx_metric_name}}"
                Table false
                Attribute "{{jmx_metric_name}}"
            </Value>
            {{ caller() }}
    {% endif %}
{% endmacro %}

{% macro create_value_list(metric_list) %}
    {% for type, attribute in metric_list %}
        {% call create_value(type, attribute) %}
        {% endcall %}
    {% endfor %}
    {{ caller() }}
{% endmacro %}

{% macro create_mbean(context, mbean_name, jmx_obj_name, metric_list) %}
        <MBean "{{mbean_name}}">
            ObjectName "{{jmx_obj_name}}"
            InstancePrefix = "{{context}}/"
            InstanceFrom = "name"
            {% call create_value_list(metric_list) %}
            {% endcall %}
        </MBean>
        {{ caller() }}
{% endmacro %}

{% macro create_mbean_list(mbean_list) %}
        {% for context, mbean_name, jmx_obj_name, metric_list in mbean_list %}
            {% call create_mbean(context, mbean_name, jmx_obj_name, metric_list) %}
            {% endcall %}
        {% endfor %}
{{ caller() }}
{% endmacro %}

{% macro create_connection(port, mbean_list) %}
        <Connection>
            Host "localhost"
            ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:{{port}}/jmxrmi"
            {% for context, mbean_name, jmx_obj_name, metric_list in mbean_list %}
            Collect "{{mbean_name}}"
            {% endfor %}
        </Connection>
        {{ caller() }}
{% endmacro %}

{% set namenode_activity_metric_list = [
    ("counter", "CreateFileOps"),
    ("counter", "FilesCreated"),
    ("counter", "FilesAppended"),
    ("counter", "GetBlockLocations"),
    ("counter", "FilesRenamed"),
    ("counter", "GetListingOps"),
    ("counter", "DeleteFileOps"),
    ("counter", "FilesDeleted"),
    ("counter", "FileInfoOps"),
    ("counter", "AddBlockOps"),
    ("counter", "GetAdditionalDatanodeOps"),
    ("counter", "CreateSymlinkOps"),
    ("counter", "GetLinkTargetOps"),
    ("counter", "FilesInGetListingOps"),
    ("counter", "AllowSnapshotOps"),
    ("counter", "DisallowSnapshotOps"),
    ("counter", "CreateSnapshotOps"),
    ("counter", "DeleteSnapshotOps"),
    ("counter", "RenameSnapshotOps"),
    ("counter", "ListSnapshottableDirOps"),
    ("counter", "SnapshotDiffReportOps"),
    ("counter", "TransactionsNumOps"),
    ("counter", "TransactionsAvgTime"),
    ("counter", "SyncsNumOps"),
    ("counter", "SyncsAvgTime"),
    ("counter", "TransactionsBatchedInSync"),
    ("counter", "BlockReportNumOps"),
    ("time", "BlockReportAvgTime"),
    ("counter", "CacheReportNumOps"),
    ("time", "CacheReportAvgTime"),
    ("time", "SafeModeTime"),
    ("time", "FsImageLoadTime"),
    ("time", "FsImageLoadTime"),
    ("counter", "GetEditNumOps"),
    ("time", "GetEditAvgTime"),
    ("counter", "GetImageNumOps"),
    ("time", "GetImageAvgTime"),
    ("counter", "PutImageNumOps"),
    ("time", "PutImageAvgTime")
]%}

{% set fs_name_system_metric_list = [
    ("gauge", "MissingBlocks"),
    ("counter", "ExpiredHeartbeats"),
    ("counter", "TransactionsSinceLastCheckpoint"),
    ("counter", "TransactionsSinceLastLogRoll"),
    ("gauge", "LastWrittenTransactionId"),
    ("time", "LastCheckpointTime"),
    ("gauge", "CapacityTotal"),
    ("gauge", "CapacityTotalGB"),
    ("gauge", "CapacityUsed"),
    ("gauge", "CapacityUsedGB"),
    ("gauge", "CapacityRemaining"),
    ("gauge", "CapacityRemainingGB"),
    ("gauge", "CapacityUsedNonDFS"),
    ("gauge", "TotalLoad"),
    ("gauge", "SnapshottableDirectories"),
    ("gauge", "Snapshots"),
    ("gauge", "BlocksTotal"),
    ("gauge", "FilesTotal"),
    ("gauge", "PendingReplicationBlocks"),
    ("gauge", "UnderReplicatedBlocks"),
    ("gauge", "CorruptBlocks"),
    ("gauge", "ScheduledReplicationBlocks"),
    ("gauge", "PendingDeletionBlocks"),
    ("gauge", "ExcessBlocks"),
    ("gauge", "PostponedMisreplicatedBlocks"),
    ("gauge", "PendingDataNodeMessageCourt"),
    ("time", "MillisSinceLastLoadedEdits"),
    ("gauge", "BlockCapacity"),
    ("gauge", "StaleDataNodes"),
    ("gauge", "TotalFiles")
]%}

{% set datanode_activity_metric_list = [
    ("counter", "BytesWritten"),
    ("counter", "BytesRead"),
    ("counter", "BlocksWritten"),
    ("counter", "BlocksRead"),
    ("counter", "BlocksReplicated"),
    ("counter", "BlocksRemoved"),
    ("counter", "BlocksVerified"),
    ("counter", "BlockVerificationFailures"),
    ("counter", "BlocksCached"),
    ("counter", "BlocksUncached"),
    ("counter", "ReadsFromLocalClient"),
    ("counter", "ReadsFromRemoteClient"),
    ("counter", "WritesFromLocalClient"),
    ("counter", "WritesFromRemoteClient"),
    ("counter", "BlocksGetLocalPathInfo"),
    ("counter", "FsyncCount"),
    ("counter", "VolumeFailures"),
    ("counter", "ReadBlockOpNumOps"),
    ("time", "ReadBlockOpAvgTime"),
    ("counter", "WriteBlockOpNumOps"),
    ("time", "WriteBlockOpAvgTime"),
    ("counter", "BlockChecksumOpNumOps"),
    ("time", "BlockChecksumOpAvgTime"),
    ("counter", "CopyBlockOpNumOps"),
    ("time", "CopyBlockOpAvgTime"),
    ("counter", "ReplaceBlockOpNumOps"),
    ("time", "ReplaceBlockOpAvgTime"),
    ("counter", "HeartbeatsNumOps"),
    ("time", "HeartbeatsAvgTime"),
    ("counter", "BlockReportsNumOps"),
    ("time", "BlockReportsAvgTime"),
    ("counter", "IncrementalBlockReportsNumOps"),
    ("time", "IncrementalBlockReportsAvgTime"),
    ("counter", "CacheReportsNumOps"),
    ("time", "CacheReportsAvgTime"),
    ("counter", "PacketAckRoundTripTimeNanosNumOps"),
    ("time", "PacketAckRoundTripTimeNanosAvgTime"),
    ("counter", "FlushNanosNumOps"),
    ("time", "FlushNanosAvgTime"),
    ("counter", "FsyncNanosNumOps"),
    ("time", "FsyncNanosAvgTime"),
    ("counter", "SendDataPacketBlockedOnNetworkNanosNumOps"),
    ("time", "SendDataPacketBlockedOnNetworkNanosAvgTime"),
    ("counter", "SendDataPacketTransferNanosNumOps"),
    ("time", "SendDataPacketTransferNanosAvgTime")
]%}

{% set cluster_metrics_list = [
    ("gauge", "NumActiveNMs"),
    ("gauge", "NumDecommissionedNMs"),
    ("gauge", "NumLostNMs"),
    ("gauge", "NumUnhealthyNMs"),
    ("gauge", "NumRebootedNMs")
]%}

{% set queue_metrics_list = [
    ("gauge", "running_0"),
    ("gauge", "running_60"),
    ("gauge", "running_300"),
    ("gauge", "running_1440"),
    ("counter", "AppsSubmitted"),
    ("gauge", "AppsRunning"),
    ("gauge", "AppsPending"),
    ("counter", "AppsCompleted"),
    ("counter", "AppsKilled"),
    ("counter", "AppsFailed"),
    ("gauge", "AllocatedMB"),
    ("gauge", "AllocatedVCores"),
    ("gauge", "AllocatedContainers"),
    ("counter", "AggregateContainersAllocated"),
    ("counter", "AggregateContainersReleased"),
    ("gauge", "AvailableMB"),
    ("gauge", "AvailableVCores"),
    ("gauge", "PendingMB"),
    ("gauge", "PendingVCores"),
    ("gauge", "PendingContainers"),
    ("gauge", "ReservedMB"),
    ("gauge", "ReservedVCores"),
    ("gauge", "ReservedContainers"),
    ("gauge", "ActiveUsers"),
    ("gauge", "ActiveApplications"),
    ("gauge", "FairShareMB"),
    ("gauge", "FairShareVCores"),
    ("gauge", "MinShareMB"),
    ("gauge", "MinShareVCores"),
    ("gauge", "MaxShareMB"),
    ("gauge", "MaxShareVCores")
]%}

{% set nodemanager_metrics_list = [
    ("counter", "containersLaunched"),
    ("counter", "containersCompleted"),
    ("counter", "containersFailed"),
    ("counter", "containersKilled"),
    ("gauge", "containersIniting"),
    ("gauge", "containersRunning"),
    ("gauge", "allocatedContainers"),
    ("gauge", "allocatedGB"),
    ("gauge", "availableGB")
]%}

{% set hdfs_mbean_list = [
  ("dfs", "NameNode", "Hadoop:name=NameNodeActivity,service=NameNode", namenode_activity_metric_list),
  ("dfs", "FSNamesystem", "Hadoop:name=FSNamesystem,service=NameNode", fs_name_system_metric_list),
]%}

{% set yarn_mbean_list = [
  ("yarn", "ClusterMetrics", "Hadoop:name=ClusterMetrics,service=ResourceManager", cluster_metrics_list),
  ("yarn", "QueueMetrics", "Hadoop:name=QueueMetrics,q0=root,service=ResourceManager", queue_metrics_list),
  ("yarn", "NodeManagerMetrics", "Hadoop:name=NodeManagerMetrics,service=NodeManager", nodemanager_metrics_list)
]%}

LoadPlugin java
LoadPlugin match_regex
LoadPlugin target_set
LoadPlugin target_replace

<Plugin "java">
    JVMARG "-Djava.class.path=/opt/stackdriver/collectd/share/collectd/java/collectd-api.jar:/opt/stackdriver/collectd/share/collectd/java/generic-jmx.jar"
    LoadPlugin "org.collectd.java.GenericJMX"

    <Plugin "GenericJMX">

        {% call create_mbean(hdfs_mbean_list) %}{% endcall %}
        {% call create_mbean(yarn_mbean_list) %}{% endcall %}
        
        {% call connection(8551, hdfs_mbean_list)%}{% endcall %}
        {% call connection(8554, yarn_mbean_list)%}{% endcall %}

     </Plugin>
</Plugin>


<Chain "GenericJMX_hadoop">
    <Rule "rewrite_genericjmx_to_hadoop">
        <Match regex>
            Plugin "^GenericJMX$"
        </Match>
        <Target "replace">
            PluginInstance "_" "/"
        </Target>
        <Target "set">
            MetaData "stackdriver_metric_type" "custom.googleapis.com/%{plugin_instance}/%{type_instance}"
            # MetaData "label:service_name" "dataproc"
        </Target>

    </Rule>
    <Rule "go_back">
        Target "return"
    </Rule>
</Chain>

<Chain "PreCache">
    <Rule "jump_to_GenericJMX_hadoop">
        <Target "jump">
            Chain "GenericJMX_hadoop"
        </Target>
    </Rule>
</Chain>
PreCacheChain "PreCache"



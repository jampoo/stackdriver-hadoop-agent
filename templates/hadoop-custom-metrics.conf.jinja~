
{% macro create_value(type, jmx_metric_name) %}
    {% if jmx_metric_name in upload_list %}
            <Value>
                Type "{{ type }}"
                InstancePrefix "{{jmx_metric_name}}"
                Table false
                Attribute "{{jmx_metric_name}}"
            </Value>
            {{ caller() }}
    {% endif %}
{% endmacro %}

{% macro create_value_list(metric_list) %}
    {% for type, attribute in metric_list %}
        {% call create_value(type, attribute) %}
        {% endcall %}
    {% endfor %}
    {{ caller() }}
{% endmacro %}

{% macro create_mbean_internal(context, mbean_name, jmx_obj_name, metric_list) %}
        <MBean "{{mbean_name}}">
            ObjectName "{{jmx_obj_name}}"
            InstancePrefix = "{{context}}/"
            InstanceFrom = "name"
            {% call create_value_list(metric_list) %}
            {% endcall %}
        </MBean>
        {{ caller() }}
{% endmacro %}

{% macro create_mbean(context, mbean_name, jmx_obj_name, metric_list) %}
    {% for type, attribute in metric_list %}
        {% if attribute in upload_list %}
            create_mbean_internal(context, mbean_name, jmx_obj_name, metric_list)
            
        {% endif %}
    {% endfor %}
{% endmacro %}

{% macro create_mbean_list(mbean_list) %}
        {% for context, mbean_name, jmx_obj_name, metric_list in mbean_list %}
            {% call create_mbean(context, mbean_name, jmx_obj_name, metric_list) %}
            {% endcall %}
        {% endfor %}
{{ caller() }}
{% endmacro %}

{% macro create_connection(port, mbean_list) %}
        <Connection>
            Host "localhost"
            ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:{{port}}/jmxrmi"
            {% for context, mbean_name, jmx_obj_name, metric_list in mbean_list %}
            Collect "{{mbean_name}}"
            {% endfor %}
        </Connection>
        {{ caller() }}
{% endmacro %}

{% set namenode_activity_metric_list = [
    ("counter", "CreateFileOps"),
    ("counter", "FilesCreated"),
    ("counter", "FilesAppended"),
    ("counter", "GetBlockLocations"),
    ("counter", "FilesRenamed"),
    ("counter", "GetListingOps"),
    ("counter", "DeleteFileOps"),
    ("counter", "FilesDeleted"),
    ("counter", "FileInfoOps"),
    ("counter", "AddBlockOps"),
    ("counter", "GetAdditionalDatanodeOps"),
    ("counter", "CreateSymlinkOps"),
    ("counter", "GetLinkTargetOps"),
    ("counter", "FilesInGetListingOps"),
    ("counter", "AllowSnapshotOps"),
    ("counter", "DisallowSnapshotOps"),
    ("counter", "CreateSnapshotOps"),
    ("counter", "DeleteSnapshotOps"),
    ("counter", "RenameSnapshotOps"),
    ("counter", "ListSnapshottableDirOps"),
    ("counter", "SnapshotDiffReportOps"),
    ("counter", "TransactionsNumOps"),
    ("counter", "TransactionsAvgTime"),
    ("counter", "SyncsNumOps"),
    ("counter", "SyncsAvgTime"),
    ("counter", "TransactionsBatchedInSync"),
    ("counter", "BlockReportNumOps"),
    ("time", "BlockReportAvgTime"),
    ("counter", "CacheReportNumOps"),
    ("time", "CacheReportAvgTime"),
    ("time", "SafeModeTime"),
    ("time", "FsImageLoadTime"),
    ("time", "FsImageLoadTime"),
    ("counter", "GetEditNumOps"),
    ("time", "GetEditAvgTime"),
    ("counter", "GetImageNumOps"),
    ("time", "GetImageAvgTime"),
    ("counter", "PutImageNumOps"),
    ("time", "PutImageAvgTime")
]%}

{% set fs_name_system_metric_list = [
    ("FSNamesystem", "MissingBlocks", "gauge"),
    ("FSNamesystem", "ExpiredHeartbeats", "counter"),
    ("FSNamesystem", "TransactionsSinceLastCheckpoint", "counter"),
    ("FSNamesystem", "TransactionsSinceLastLogRoll", "counter"),
    ("FSNamesystem", "LastWrittenTransactionId", "gauge"),
    ("FSNamesystem", "LastCheckpointTime", "time"),
    ("FSNamesystem", "CapacityTotal", "gauge"),
    ("FSNamesystem", "CapacityTotalGB", "gauge"),
    ("FSNamesystem", "CapacityUsed", "gauge"),
    ("FSNamesystem", "CapacityUsedGB", "gauge"),
    ("FSNamesystem", "CapacityRemaining", "gauge"),
    ("FSNamesystem", "CapacityRemainingGB", "gauge"),
    ("FSNamesystem", "CapacityUsedNonDFS", "gauge"),
    ("FSNamesystem", "TotalLoad", "gauge"),
    ("FSNamesystem", "SnapshottableDirectories", "gauge"),
    ("FSNamesystem", "Snapshots", "gauge"),
    ("FSNamesystem", "BlocksTotal", "gauge"),
    ("FSNamesystem", "FilesTotal", "gauge"),
    ("FSNamesystem", "PendingReplicationBlocks", "gauge"),
    ("FSNamesystem", "UnderReplicatedBlocks", "gauge"),
    ("FSNamesystem", "CorruptBlocks", "gauge"),
    ("FSNamesystem", "ScheduledReplicationBlocks", "gauge"),
    ("FSNamesystem", "PendingDeletionBlocks", "gauge"),
    ("FSNamesystem", "ExcessBlocks", "gauge"),
    ("FSNamesystem", "PostponedMisreplicatedBlocks", "gauge"),
    ("FSNamesystem", "PendingDataNodeMessageCourt", "gauge"),
    ("FSNamesystem", "MillisSinceLastLoadedEdits", "time"),
    ("FSNamesystem", "BlockCapacity", "gauge"),
    ("FSNamesystem", "StaleDataNodes", "gauge"),
    ("FSNamesystem", "TotalFiles", "gauge")
]%}

{% set datanode_activity_metric_list = [
    ("datanode", "BytesWritten", "counter"),
    ("datanode", "BytesRead", "counter"),
    ("datanode", "BlocksWritten", "counter"),
    ("datanode", "BlocksRead", "counter"),
    ("datanode", "BlocksReplicated", "counter"),
    ("datanode", "BlocksRemoved", "counter"),
    ("datanode", "BlocksVerified", "counter"),
    ("datanode", "BlockVerificationFailures", "counter"),
    ("datanode", "BlocksCached", "counter"),
    ("datanode", "BlocksUncached", "counter"),
    ("datanode", "ReadsFromLocalClient", "counter"),
    ("datanode", "ReadsFromRemoteClient", "counter"),
    ("datanode", "WritesFromLocalClient", "counter"),
    ("datanode", "WritesFromRemoteClient", "counter"),
    ("datanode", "BlocksGetLocalPathInfo", "counter"),
    ("datanode", "FsyncCount", "counter"),
    ("datanode", "VolumeFailures", "counter"),
    ("datanode", "ReadBlockOpNumOps", "counter"),
    ("datanode", "ReadBlockOpAvgTime", "time"),
    ("datanode", "WriteBlockOpNumOps", "counter"),
    ("datanode", "WriteBlockOpAvgTime", "time"),
    ("datanode", "BlockChecksumOpNumOps", "counter"),
    ("datanode", "BlockChecksumOpAvgTime", "time"),
    ("datanode", "CopyBlockOpNumOps", "counter"),
    ("datanode", "CopyBlockOpAvgTime", "time"),
    ("datanode", "ReplaceBlockOpNumOps", "counter"),
    ("datanode", "ReplaceBlockOpAvgTime", "time"),
    ("datanode", "HeartbeatsNumOps", "counter"),
    ("datanode", "HeartbeatsAvgTime", "time"),
    ("datanode", "BlockReportsNumOps", "counter"),
    ("datanode", "BlockReportsAvgTime", "time"),
    ("datanode", "IncrementalBlockReportsNumOps", "counter"),
    ("datanode", "IncrementalBlockReportsAvgTime", "time"),
    ("datanode", "CacheReportsNumOps", "counter"),
    ("datanode", "CacheReportsAvgTime", "time"),
    ("datanode", "PacketAckRoundTripTimeNanosNumOps", "counter"),
    ("datanode", "PacketAckRoundTripTimeNanosAvgTime", "time"),
    ("datanode", "FlushNanosNumOps", "counter"),
    ("datanode", "FlushNanosAvgTime", "time"),
    ("datanode", "FsyncNanosNumOps", "counter"),
    ("datanode", "FsyncNanosAvgTime", "time"),
    ("datanode", "SendDataPacketBlockedOnNetworkNanosNumOps", "counter"),
    ("datanode", "SendDataPacketBlockedOnNetworkNanosAvgTime", "time"),
    ("datanode", "SendDataPacketTransferNanosNumOps", "counter"),
    ("datanode", "SendDataPacketTransferNanosAvgTime", "time")
]%}

{% set cluster_metrics_list = [
    ("ClusterMetrics", "NumActiveNMs", "gauge"),
    ("ClusterMetrics", "NumDecommissionedNMs", "gauge"),
    ("ClusterMetrics", "NumLostNMs", "gauge"),
    ("ClusterMetrics", "NumUnhealthyNMs", "gauge"),
    ("ClusterMetrics", "NumRebootedNMs", "gauge")
]%}

{% set queue_metrics_list = [
    ("QueueMetrics", "running_0", "gauge"),
    ("QueueMetrics", "running_60", "gauge"),
    ("QueueMetrics", "running_300", "gauge"),
    ("QueueMetrics", "running_1440", "gauge"),
    ("QueueMetrics", "AppsSubmitted", "counter"),
    ("QueueMetrics", "AppsRunning", "gauge"),
    ("QueueMetrics", "AppsPending", "gauge"),
    ("QueueMetrics", "AppsCompleted", "counter"),
    ("QueueMetrics", "AppsKilled", "counter"),
    ("QueueMetrics", "AppsFailed", "counter"),
    ("QueueMetrics", "AllocatedMB", "gauge"),
    ("QueueMetrics", "AllocatedVCores", "gauge"),
    ("QueueMetrics", "AllocatedContainers", "gauge"),
    ("QueueMetrics", "AggregateContainersAllocated", "counter"),
    ("QueueMetrics", "AggregateContainersReleased", "counter"),
    ("QueueMetrics", "AvailableMB", "gauge"),
    ("QueueMetrics", "AvailableVCores", "gauge"),
    ("QueueMetrics", "PendingMB", "gauge"),
    ("QueueMetrics", "PendingVCores", "gauge"),
    ("QueueMetrics", "PendingContainers", "gauge"),
    ("QueueMetrics", "ReservedMB", "gauge"),
    ("QueueMetrics", "ReservedVCores", "gauge"),
    ("QueueMetrics", "ReservedContainers", "gauge"),
    ("QueueMetrics", "ActiveUsers", "gauge"),
    ("QueueMetrics", "ActiveApplications", "gauge"),
    ("QueueMetrics", "FairShareMB", "gauge"),
    ("QueueMetrics", "FairShareVCores", "gauge"),
    ("QueueMetrics", "MinShareMB", "gauge"),
    ("QueueMetrics", "MinShareVCores", "gauge"),
    ("QueueMetrics", "MaxShareMB", "gauge"),
    ("QueueMetrics", "MaxShareVCores", "gauge")
]%}

{% set nodemanager_metrics_list = [
    ("NodeManagerMetrics", "containersLaunched", "counter"),
    ("NodeManagerMetrics", "containersCompleted", "counter"),
    ("NodeManagerMetrics", "containersFailed", "counter"),
    ("NodeManagerMetrics", "containersKilled", "counter"),
    ("NodeManagerMetrics", "containersIniting", "gauge"),
    ("NodeManagerMetrics", "containersRunning", "gauge"),
    ("NodeManagerMetrics", "allocatedContainers", "gauge"),
    ("NodeManagerMetrics", "allocatedGB", "gauge"),
    ("NodeManagerMetrics", "availableGB", "gauge")
]%}

{% set hdfs_mbean_list = [
  ("dfs", "NameNode", "Hadoop:name=NameNodeActivity,service=NameNode", namenode_activity_metric_list),
  ("dfs", "FSNamesystem", "Hadoop:name=FSNamesystem,service=NameNode", fs_name_system_metric_list),
]%}

{% set yarn_mbean_list = [
  ("yarn", "ClusterMetrics", "Hadoop:name=ClusterMetrics,service=ResourceManager", cluster_metrics_list),
  ("yarn", "QueueMetrics", "Hadoop:name=QueueMetrics,q0=root,service=ResourceManager", queue_metrics_list),
  ("yarn", "NodeManagerMetrics", "Hadoop:name=NodeManagerMetrics,service=NodeManager", nodemanager_metrics_list)
]%}

LoadPlugin java
LoadPlugin match_regex
LoadPlugin target_set
LoadPlugin target_replace

<Plugin "java">
    JVMARG "-Djava.class.path=/opt/stackdriver/collectd/share/collectd/java/collectd-api.jar:/opt/stackdriver/collectd/share/collectd/java/generic-jmx.jar"
    LoadPlugin "org.collectd.java.GenericJMX"

    <Plugin "GenericJMX">

        {% call create_mbean_list(hdfs_mbean_list) %}{% endcall %}
        {% call create_mbean_list(yarn_mbean_list) %}{% endcall %}
        
        {% call create_connection(8551, hdfs_mbean_list)%}{% endcall %}
        {% call create_connection(8554, yarn_mbean_list)%}{% endcall %}

     </Plugin>
</Plugin>


<Chain "GenericJMX_hadoop">
    <Rule "rewrite_genericjmx_to_hadoop">
        <Match regex>
            Plugin "^GenericJMX$"
        </Match>
        <Target "replace">
            PluginInstance "_" "/"
        </Target>
        <Target "set">
            MetaData "stackdriver_metric_type" "custom.googleapis.com/%{plugin_instance}/%{type_instance}"
            # MetaData "label:service_name" "dataproc"
        </Target>

    </Rule>
    <Rule "go_back">
        Target "return"
    </Rule>
</Chain>

<Chain "PreCache">
    <Rule "jump_to_GenericJMX_hadoop">
        <Target "jump">
            Chain "GenericJMX_hadoop"
        </Target>
    </Rule>
</Chain>
PreCacheChain "PreCache"


